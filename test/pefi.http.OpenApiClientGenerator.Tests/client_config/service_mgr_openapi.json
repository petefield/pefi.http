{
  "openapi": "3.0.1",
  "info": {
    "title": "Contact.ConfigManager.API",
    "version": "1.0"
  },
  "paths": {
    "/configs": {
      "get": {
        "tags": [
          "Contact.ConfigManager.API"
        ],
        "operationId": "Get All Configs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SelfServeConfigurationModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contact.ConfigManager.API"
        ],
        "operationId": "CreateConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SelfServeConfigurationModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ConditionConfiguration": {
        "type": "object",
        "properties": {
          "expression": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "sendIfDeceased": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Connector": {
        "enum": [
          "Undefined",
          "Ela",
          "Salesforce",
          "IMI",
          "Paragon"
        ],
        "type": "string"
      },
      "FeatureFlagConfiguration": {
        "type": "object",
        "properties": {
          "tenant": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "environments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeatureFlagEnvironment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FeatureFlagEnvironment": {
        "enum": [
          "Undefined",
          "Dev",
          "Uat",
          "Prod",
          "All"
        ],
        "type": "string"
      },
      "FieldMappingConfiguration": {
        "type": "object",
        "properties": {
          "inputField": {
            "type": "string",
            "nullable": true
          },
          "outputField": {
            "type": "string",
            "nullable": true
          },
          "excludeIfEmpty": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "InputDataConfiguration": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/InputDataType"
          },
          "required": {
            "type": "boolean"
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "path": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "InputDataType": {
        "enum": [
          "Undefined",
          "String",
          "Number",
          "Object",
          "Array"
        ],
        "type": "string"
      },
      "OperationUnit": {
        "enum": [
          "Undefined",
          "Complaints",
          "Fraud",
          "Servicing",
          "Atc",
          "Ams",
          "OpsComms1",
          "OpsComms2",
          "OpsComms3",
          "Collections",
          "BulkLetters"
        ],
        "type": "string"
      },
      "SelfServeConfigurationModel": {
        "type": "object",
        "properties": {
          "configId": {
            "type": "string",
            "format": "uuid"
          },
          "contactType": {
            "type": "string",
            "nullable": true
          },
          "operationUnit": {
            "$ref": "#/components/schemas/OperationUnit"
          },
          "connector": {
            "$ref": "#/components/schemas/Connector"
          },
          "channel": {
            "$ref": "#/components/schemas/SendCommunicationChannel"
          },
          "outputType": {
            "$ref": "#/components/schemas/SendCommunicationOutputType"
          },
          "inputData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InputDataConfiguration"
            },
            "nullable": true
          },
          "mapping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldMappingConfiguration"
            },
            "nullable": true
          },
          "condition": {
            "$ref": "#/components/schemas/ConditionConfiguration"
          },
          "xmlMapping": {
            "nullable": true
          },
          "featureFlags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeatureFlagConfiguration"
            },
            "nullable": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SendCommunicationChannel": {
        "enum": [
          "Undefined",
          "Email",
          "Sms",
          "Phone",
          "Letter",
          "DigitalLetter",
          "Auto"
        ],
        "type": "string"
      },
      "SendCommunicationOutputType": {
        "enum": [
          "Undefined",
          "Csv",
          "Json",
          "Xml"
        ],
        "type": "string"
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}